<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="my.erp.org.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="my.erp.org.domain.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    aa.id, aa.account, aa.username, aa.avatar, aa.tel, aa.creat_time, aa.state, aa.department_id, aa.student_id, 
    aa.role_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_user aa
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="my.erp.org.domain.User" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user (account, username, password, 
      avatar, tel, creat_time, 
      state, department_id, student_id, 
      role_id)
    values (#{account,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{creatTime,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{departmentId,jdbcType=BIGINT}, #{studentId,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="my.erp.org.domain.User" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="my.erp.org.domain.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="my.erp.org.domain.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set account = #{account,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=BIGINT},
      student_id = #{studentId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="queryUser" resultType="my.erp.org.vo.UserVo">
    select <include refid="Base_Column_List" /> from sys_user aa
    <where>
	  <if test="id != null">
		and aa.id = #{id}
      </if>
	  <if test="account != null">
		and aa.account = #{account}
      </if>
	  <if test="username != null and username !=''" >
		and aa.username like CONCAT("%", #{username}, "%")
      </if>
	  <if test="password != null">
		and aa.password = #{password}
      </if>
	  <if test="avatar != null">
		and aa.avatar = #{avatar}
      </if>
	  <if test="tel != null">
		and aa.tel = #{tel}
      </if>
	  <if test="creatTime != null">
		and aa.creat_time = #{creatTime}
      </if>
	  <if test="state != null">
		and aa.state = #{state}
      </if>
	  <if test="departmentId != null and departmentId !=''">
		and aa.department_id = #{departmentId}
      </if>
	  <if test="studentId != null">
		and aa.student_id = #{studentId}
      </if>
	  <if test="roleId != null">
		and aa.role_id = #{roleId}
      </if>
    </where>
  </select>
  
  <resultMap id="PowerMap" type="my.erp.org.vo.PowerDTO">
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="jump" jdbcType="VARCHAR" property="jump" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <collection autoMapping="true" fetchType="lazy" column="{userId=user_id,pid=id}" property="list" select="selectPowerTreeByUserID">
	    <result column="title" jdbcType="VARCHAR" property="title" />
	    <result column="icon" jdbcType="VARCHAR" property="icon" />
	    <result column="jump" jdbcType="VARCHAR" property="jump" />
	    <result column="name" jdbcType="VARCHAR" property="name" />
	 </collection>
  </resultMap>
  <!--   查找权限根节点 	-->
  <select id="selectPowerRootByUserID" parameterType="java.util.Map" resultMap="PowerMap">
  		SELECT DISTINCT cp.name name,cp.content title,cp.jump,cp.icon icon,cp.id as id,${userId} as user_id FROM sys_power cp
		LEFT JOIN sys_role_power_ref crpf ON cp.id = crpf.power_id
		LEFT JOIN sys_user_role_ref curr ON crpf.role_id = curr.role_id
		WHERE curr.user_id = ${userId} AND cp.parent_id IS NULL AND soft = 'menu'
		ORDER BY `level`
  </select>
  <!--   查找权限子节点 	-->
  <select id="selectPowerTreeByUserID" parameterType="java.util.Map" resultMap="PowerMap">
		SELECT DISTINCT cp.name name,cp.content title,cp.jump,cp.icon icon,cp.id as id,${userId} as user_id FROM sys_power cp
		LEFT JOIN sys_role_power_ref crpf ON cp.id = crpf.power_id
		LEFT JOIN sys_user_role_ref curr ON crpf.role_id = curr.role_id
		WHERE curr.user_id = ${userId} AND cp.parent_id = #{pid} AND soft = 'menu'
		ORDER BY `level`
  </select>
  
  <select id="selectUser" resultType="my.erp.org.vo.UserVo">
 	select * from sys_user where account = #{account} and password = #{password}
  </select> 
  
  <resultMap autoMapping="true" id="InfoMap" type="my.erp.org.vo.UserVo">
    <association autoMapping="true" fetchType="lazy" column="student_id" property="student" select="selectStu"></association>
  </resultMap>
  <select id="queryEmployeesInfo" resultMap="InfoMap">
 	select * from sys_user where department_id = #{departmentId} 
 	<if test="username != null and username !=''" >
		and username like CONCAT("%", #{username}, "%")
    </if>
  </select> 
  <select id="selectStu" parameterType="java.util.Map" resultType="my.erp.org.domain.Student">
 	select * from res_student where id = #{student_id}
  </select> 
  <select id="getRole" resultType="java.util.Map">
 	select bb.* from sys_user_role_ref aa 
 	left join sys_role bb on bb.id = aa.role_id
 	where aa.user_id = #{id}
  </select> 
  
  <update id="delUserRole">
    DELETE FROM sys_user_role_ref
	WHERE user_id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="dismiss">
    update sys_user
    set department_id = null
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="appoint1">
    update sys_user_role_ref set role_id = (SELECT id from sys_role WHERE `name` = "社长") where user_id = #{id,jdbcType=BIGINT}
  </update>
  
  <insert id="appoint2">
    insert into sys_user_role_ref (user_id, role_id)
    values (#{id,jdbcType=BIGINT},(SELECT id from sys_role WHERE `name` = "副社长"))
  </insert>
  
  <delete id="delRef">
	DELETE FROM sys_user_role_ref WHERE id in (
	SELECT id FROM (
		(
			SELECT aa.id FROM sys_user_role_ref aa
			RIGHT JOIN ( SELECT id FROM sys_user 
			WHERE department_id = (
						SELECT department_id FROM sys_user 
						WHERE id = #{id,jdbcType=BIGINT}
					)
			) bb ON aa.user_id = bb.id
			WHERE aa.role_id = (
					SELECT id FROM sys_role
					WHERE NAME = "社长"
				)
		) cc
	))
  </delete>
  
  <select id="queryApplyUser" resultType="my.erp.org.vo.UserVo">
    select bb.id, aa.* from sys_user aa
    right join log_apply_department bb on bb.user_id = aa.id 
    <where>
	  <if test="account != null">
		and aa.account = #{account}
      </if>
	  <if test="username != null and username !=''" >
		and aa.username like CONCAT("%", #{username}, "%")
      </if>
	  <if test="tel != null">
		and aa.tel = #{tel}
      </if>
	  and aa.state = "ENABLED"
      and bb.department_id = #{departmentId}
      and aa.state = "ENABLED"
    </where>
  </select>
  
  <insert id="addRole">
    insert into sys_user_role_ref (user_id, role_id)
    values (#{userId},(SELECT id from sys_role WHERE `name` = #{tip}))
  </insert>
  
  <update id="ToEmployee">
    UPDATE sys_user_role_ref SET role_id = (SELECT id FROM sys_role WHERE name = "干事")
	WHERE id = (
	SELECT id FROM (
			(
				SELECT aa.id FROM sys_user_role_ref aa
				RIGHT JOIN ( SELECT id FROM sys_user 
				WHERE department_id = (
							SELECT department_id FROM sys_user 
							WHERE id = #{id,jdbcType=BIGINT}
						)
				) bb ON aa.user_id = bb.id
				WHERE aa.role_id = (
						SELECT id FROM sys_role
						WHERE NAME = "社长"
					)
			) cc
		))
  </update>
  
  <select id="queryCadre" resultType="my.erp.org.vo.UserVo">
 	SELECT * FROM (
		SELECT *,"社长" as job FROM sys_user aa
		RIGHT JOIN (SELECT aa.user_id FROM sys_user_role_ref aa
					WHERE aa.role_id = (
							SELECT id FROM sys_role
							WHERE NAME = "社长"
						)) bb ON bb.user_id = aa.id
		UNION ALL
		SELECT *,"副社长" as job FROM sys_user aa
		RIGHT JOIN (SELECT aa.user_id FROM sys_user_role_ref aa
					WHERE aa.role_id = (
							SELECT id FROM sys_role
							WHERE NAME = "副社长"
						)) bb ON bb.user_id = aa.id
	) cc WHERE cc.department_id =  #{departmentId} 
	ORDER BY cc.job DESC
  </select> 
</mapper>